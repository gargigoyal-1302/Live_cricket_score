[{"/home/lp-greenapex/Desktop/gitLab/cricket-score/src/index.js":"1","/home/lp-greenapex/Desktop/gitLab/cricket-score/src/reportWebVitals.js":"2","/home/lp-greenapex/Desktop/gitLab/cricket-score/src/App.js":"3","/home/lp-greenapex/Desktop/gitLab/cricket-score/src/components/Navbar.js":"4"},{"size":500,"mtime":1611297839931,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611297839931,"results":"7","hashOfConfig":"6"},{"size":3841,"mtime":1611581387041,"results":"8","hashOfConfig":"6"},{"size":469,"mtime":1611567133408,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"lhtcud",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/lp-greenapex/Desktop/gitLab/cricket-score/src/index.js",[],["21","22"],"/home/lp-greenapex/Desktop/gitLab/cricket-score/src/reportWebVitals.js",[],"/home/lp-greenapex/Desktop/gitLab/cricket-score/src/App.js",["23"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Navbar from \"./components/Navbar\";\nimport axios from \"axios\";\nimport ReactTable from \"react-table-v6\";\nimport \"react-table-v6/react-table.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction App() {\n  const [matches, setMatches] = useState([]);\n  const url = `https://cricapi.com/api/matches/?apikey=${process.env.REACT_APP_API_KEY}\n  `;\n\n  /// API CALL\n  useEffect(() => {\n    getMatches();\n  }, [matches]);\n\n  const getMatches = () => {\n    axios\n      .get(url)\n      .then((res) => {\n        setMatches(res.data.matches);\n        console.log(matches);\n      })\n      .catch((error) => alert(\"unable to load data\"));\n  };\n\n  // function to display raw data using dialog box\n  const [open, setOpen] = React.useState(false);\n  const [selectedMatchDetails, setSelectedMatchDetails] = useState(\"\");\n  const handleClickOpen = (row) => {\n    setOpen(true);\n    setSelectedMatchDetails(row);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  ///// handle show details\n  const renderButton = (row) => {\n    return (\n      <div>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleClickOpen(row)}\n        >\n          Show Details\n        </Button>\n      </div>\n    );\n  };\n\n  const columns = [\n    {\n      Header: \"Team -1\",\n      accessor: \"team-1\",\n      sortable: true,\n      filterable: true,\n    },\n    {\n      Header: \"Team-2\",\n      accessor: \"team-2\",\n      sortable: true,\n      filterable: true,\n    },\n    {\n      Header: \"Date and Time\",\n      accessor: \"dateTimeGMT\",\n      filterable: false,\n    },\n\n    {\n      Header: \"Show Details\",\n      sortable: false,\n      filterable: false,\n      Cell: (row) => {\n        return renderButton(row.original);\n      },\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {selectedMatchDetails[\"team-1\"] +\n            \" Vs \" +\n            selectedMatchDetails[\"team-2\"]}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <p>\n              Start time :\n              {new Date(selectedMatchDetails.dateTimeGMT).toLocaleString()}\n            </p>\n            {selectedMatchDetails.matchStarted ? (\n              <p>\n                Toss Win By : {selectedMatchDetails.toss_winner_team}\n                <br />\n                Winner Team : {selectedMatchDetails.winner_team}\n              </p>\n            ) : (\n              <h2>Match has not started yet !!</h2>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Navbar />\n      <h1 className=\"heading\">Welcome to my live score app</h1>\n      <Grid container>\n        <Grid sm={1}></Grid>\n        <Grid sm={10}>\n          {/* react table for displaying data */}\n          <ReactTable\n            columns={columns}\n            noDataText=\"Please Wait\"\n            showPageSizeOptions={false}\n            defaultPageSize={20}\n            data={matches}\n            filterable\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","/home/lp-greenapex/Desktop/gitLab/cricket-score/src/components/Navbar.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":24,"column":6,"nodeType":"32","endLine":24,"endColumn":15,"suggestions":"33"},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMatches'. Either include it or remove the dependency array.","ArrayExpression",["38"],["36"],["37"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [getMatches, matches]",{"range":"41","text":"42"},[844,853],"[getMatches, matches]"]